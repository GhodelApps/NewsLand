plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

// This fun will return api key while building on CI
String getApiKey() {
    // Read credentials
    def credentialFile = rootProject.file("./credentials.properties")
    def credentialProperty = new Properties()
    credentialProperty.load(new FileInputStream(credentialFile))
    return credentialProperty['API_KEY']
}


android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 31
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "Api_Key", getApiKey()
        }
        debug {
            buildConfigField 'String', "Api_Key", getApiKey()
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'

    // Room components
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin extensions & coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Kotlin Coroutine library (Core -> means not specific to android)
    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_version"

    // Jetpack paging 3
    api "androidx.paging:paging-runtime-ktx:$paging_version"

    // Retrofit 2
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    // Adding api gives access of retrofit in app module too,
    // but it affects the build performance.

    // Moshi converter factory
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okk_http_version"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    // Moshi Codegen
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}